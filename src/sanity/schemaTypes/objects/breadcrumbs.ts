import { defineArrayMember, defineField, defineType } from 'sanity'

const breadcrumbItem = defineType({
  name: 'breadcrumb.item',
  title: 'Breadcrumb Item',
  type: 'object',
  fields: [
    defineField({
      name: 'label',
      title: 'Label',
      type: 'string',
      validation: (rule) => rule.required().min(1),
    }),
    defineField({
      name: 'link',
      title: 'Destination',
      type: 'link',
      validation: (rule) => rule.required(),
    }),
  ],
  preview: {
    select: { title: 'label', link: 'link' },
    prepare({ title, link }) {
      const subtitle =
        link?.linkType === 'external'
          ? link?.href
          : link?.internalPath || link?.href || 'Internal page'
      return {
        title: title || 'Breadcrumb item',
        subtitle,
      }
    },
  },
})

const breadcrumbSettings = defineType({
  name: 'breadcrumbSettings',
  title: 'Breadcrumb Settings',
  type: 'object',
  fields: [
    defineField({
      name: 'mode',
      title: 'Mode',
      type: 'string',
      initialValue: 'auto',
      options: {
        layout: 'radio',
        list: [
          { title: 'Automatic', value: 'auto' },
          { title: 'Manual override', value: 'manual' },
        ],
      },
    }),
    defineField({
      name: 'manualItems',
      title: 'Manual trail',
      type: 'array',
      of: [defineArrayMember({ type: 'breadcrumb.item' })],
      hidden: ({ parent }) => parent?.mode !== 'manual',
      description: 'Provide full breadcrumb trail when manual mode is selected.',
    }),
    defineField({
      name: 'additionalItems',
      title: 'Additional items (auto mode)',
      type: 'array',
      of: [defineArrayMember({ type: 'breadcrumb.item' })],
      hidden: ({ parent }) => parent?.mode === 'manual',
      description: 'Optional items inserted before the current page when automatic mode is used.',
    }),
    defineField({
      name: 'currentLabel',
      title: 'Current page label override',
      type: 'string',
      hidden: ({ parent }) => parent?.mode === 'manual',
    }),
  ],
  preview: {
    select: { mode: 'mode', manualCount: 'manualItems.length' },
    prepare({ mode, manualCount }) {
      const title = mode === 'manual' ? 'Manual breadcrumbs' : 'Automatic breadcrumbs'
      return { title, subtitle: mode === 'manual' ? `${manualCount ?? 0} item(s)` : 'Autogenerated trail' }
    },
  },
})

export const breadcrumbObjects = [breadcrumbItem, breadcrumbSettings]

